# Form implementation generated from reading ui file 'gl.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
import sqlite3
import random
import string
import smtplib


# Send a password reset email
def send_reset_email(to_email, token):
    from_email = "dudols2000@gmail.com"
    password = "2661760364"

    subject = "Password reset for your PyQt6 application"
    body = f"Your password reset token is: {token}\n\nUse this token to reset your password in the application."

    message = f"Subject: {subject}\n\n{body}"

    try:
        with smtplib.SMTP_SSL("smtp.gmail.com", 465) as server:
            server.login(from_email, password)
            server.sendmail(from_email, to_email, message)
        return True
    except Exception as e:
        print(e)
        return False


# Generate a random token
def generate_token(length=8):
    return ''.join(random.choice(string.ascii_letters + string.digits) for _ in range(length))


# Initialize the database
def init_db():
    conn = sqlite3.connect("users.db")
    cursor = conn.cursor()

    cursor.execute("""
    CREATE TABLE IF NOT EXISTS users (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        username TEXT UNIQUE NOT NULL,
        password TEXT NOT NULL
    )
    """)

    conn.commit()
    conn.close()

init_db()


# Register a new user
def register_user(username, password):
    try:
        conn = sqlite3.connect("users.db")
        cursor = conn.cursor()

        cursor.execute("INSERT INTO users (username, password) VALUES (?, ?)", (username, password))
        conn.commit()
        conn.close()
        return True
    except sqlite3.IntegrityError:
        return False


# Authenticate a user
def authenticate_user(username, password):
    conn = sqlite3.connect("users.db")
    cursor = conn.cursor()

    cursor.execute("SELECT * FROM users WHERE username = ? AND password = ?", (username, password))
    result = cursor.fetchone()
    conn.close()

    return result is not None


# Reset a user's password
class ResetPasswordDialog(QtWidgets.QDialog):
    def __init__(self):
        super().__init__()
        self.setupUi()

    # Setup the UI
    def setupUi(self):
        self.setWindowTitle("Reset Password")
        self.resize(300, 200)
        self.verticalLayout = QtWidgets.QVBoxLayout(self)

        self.label = QtWidgets.QLabel("Enter the token you received by email:")
        self.verticalLayout.addWidget(self.label)

        self.token_lineEdit = QtWidgets.QLineEdit(self)
        self.verticalLayout.addWidget(self.token_lineEdit)

        self.label_2 = QtWidgets.QLabel("Enter your new password:")
        self.verticalLayout.addWidget(self.label_2)

        self.new_password_lineEdit = QtWidgets.QLineEdit(self)
        self.new_password_lineEdit.setEchoMode(QtWidgets.QLineEdit.EchoMode.Password)
        self.verticalLayout.addWidget(self.new_password_lineEdit)

        self.submit_button = QtWidgets.QPushButton("Submit", self)
        self.submit_button.clicked.connect(self.submitResetPassword)
        self.verticalLayout.addWidget(self.submit_button)

    # Submit the new password
    def submitResetPassword(self):
        pass


# The main window
class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 811)
        MainWindow.setStyleSheet("#centralwidget{\n"
"background-color:rgb(0,0,2);\n"
"background-image:url(:/resources/Desktop/icon_.jpeg)}\n"
"\n"
"#Login_page{\n"
"background-color:rgb(9,27,68);\n"
"}\n"
"\n"
"#Register_page{\n"
"background-color:rgb(9,27,68);\n"
"}\n"
"\n"
"#widget{\n"
"background-color:rgb(9,27,68);\n"
"border-radius:20px;\n"
"}\n"
"\n"
"QLineEdit{\n"
"background-color:rgb(9,10,37);\n"
"padding:5px 3px;\n"
"border-radius:5px;\n"
"}\n"
"\n"
"QPushButton{\n"
"background-color:rgb(9,10,37);\n"
"padding:5px 3px;\n"
"border-radius:5px;\n"
"}\n"
"\n"
"#to_login, #to_register, #fg_p{\n"
"background-color: transparent;\n"
"}")
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.widget = QtWidgets.QWidget(parent=self.centralwidget)
        self.widget.setGeometry(QtCore.QRect(220, 20, 361, 581))
        self.widget.setObjectName("widget")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.widget)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.stackedWidget = QtWidgets.QStackedWidget(parent=self.widget)
        self.stackedWidget.setObjectName("stackedWidget")
        self.Register_page = QtWidgets.QWidget()
        self.Register_page.setObjectName("Register_page")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.Register_page)
        self.verticalLayout.setObjectName("verticalLayout")
        self.frame = QtWidgets.QFrame(parent=self.Register_page)
        self.frame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame.setObjectName("frame")
        self.label = QtWidgets.QLabel(parent=self.frame)
        self.label.setGeometry(QtCore.QRect(130, 10, 58, 51))
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap("icons/login.png"))
        self.label.setScaledContents(True)
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.frame)
        self.label_2 = QtWidgets.QLabel(parent=self.Register_page)
        font = QtGui.QFont()
        font.setPointSize(21)
        font.setBold(True)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.verticalLayout.addWidget(self.label_2, 0, QtCore.Qt.AlignmentFlag.AlignHCenter|QtCore.Qt.AlignmentFlag.AlignTop)
        self.label_3 = QtWidgets.QLabel(parent=self.Register_page)
        self.label_3.setObjectName("label_3")
        self.verticalLayout.addWidget(self.label_3, 0, QtCore.Qt.AlignmentFlag.AlignHCenter|QtCore.Qt.AlignmentFlag.AlignTop)
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.verticalLayout.addItem(spacerItem)
        self.lineEdit = QtWidgets.QLineEdit(parent=self.Register_page)
        self.lineEdit.setObjectName("lineEdit")
        self.verticalLayout.addWidget(self.lineEdit, 0, QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.lineEdit_2 = QtWidgets.QLineEdit(parent=self.Register_page)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.verticalLayout.addWidget(self.lineEdit_2)
        self.lineEdit_3 = QtWidgets.QLineEdit(parent=self.Register_page)
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.verticalLayout.addWidget(self.lineEdit_3)
        spacerItem1 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.verticalLayout.addItem(spacerItem1)
        self.checkBox = QtWidgets.QCheckBox(parent=self.Register_page)
        self.checkBox.setObjectName("checkBox")
        self.verticalLayout.addWidget(self.checkBox)
        self.pushButton = QtWidgets.QPushButton(parent=self.Register_page)
        self.pushButton.setObjectName("pushButton")
        self.verticalLayout.addWidget(self.pushButton)
        self.to_login = QtWidgets.QPushButton(parent=self.Register_page)
        self.to_login.setObjectName("to_login")
        self.verticalLayout.addWidget(self.to_login)
        self.label_4 = QtWidgets.QLabel(parent=self.Register_page)
        self.label_4.setObjectName("label_4")
        self.verticalLayout.addWidget(self.label_4, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.stackedWidget.addWidget(self.Register_page)
        self.Login_page = QtWidgets.QWidget()
        self.Login_page.setObjectName("Login_page")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.Login_page)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.frame_2 = QtWidgets.QFrame(parent=self.Login_page)
        self.frame_2.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame_2.setObjectName("frame_2")
        self.label_8 = QtWidgets.QLabel(parent=self.frame_2)
        self.label_8.setGeometry(QtCore.QRect(130, 10, 58, 51))
        self.label_8.setText("")
        self.label_8.setPixmap(QtGui.QPixmap("icons/login.png"))
        self.label_8.setScaledContents(True)
        self.label_8.setObjectName("label_8")
        self.verticalLayout_3.addWidget(self.frame_2)
        self.label_7 = QtWidgets.QLabel(parent=self.Login_page)
        font = QtGui.QFont()
        font.setPointSize(21)
        font.setBold(True)
        self.label_7.setFont(font)
        self.label_7.setObjectName("label_7")
        self.verticalLayout_3.addWidget(self.label_7, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.label_6 = QtWidgets.QLabel(parent=self.Login_page)
        self.label_6.setObjectName("label_6")
        self.verticalLayout_3.addWidget(self.label_6, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        spacerItem2 = QtWidgets.QSpacerItem(20, 104, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.verticalLayout_3.addItem(spacerItem2)
        self.lineEdit_4 = QtWidgets.QLineEdit(parent=self.Login_page)
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.verticalLayout_3.addWidget(self.lineEdit_4)
        self.lineEdit_6 = QtWidgets.QLineEdit(parent=self.Login_page)
        self.lineEdit_6.setObjectName("lineEdit_6")
        self.verticalLayout_3.addWidget(self.lineEdit_6)
        spacerItem3 = QtWidgets.QSpacerItem(20, 104, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.verticalLayout_3.addItem(spacerItem3)
        self.pushButton_3 = QtWidgets.QPushButton(parent=self.Login_page)
        self.pushButton_3.setObjectName("pushButton_3")
        self.verticalLayout_3.addWidget(self.pushButton_3, 0, QtCore.Qt.AlignmentFlag.AlignTop)
        self.fg_p = QtWidgets.QPushButton(parent=self.Login_page)
        self.fg_p.setObjectName("fg_p")
        self.verticalLayout_3.addWidget(self.fg_p, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.to_register = QtWidgets.QPushButton(parent=self.Login_page)
        self.to_register.setObjectName("to_register")
        self.verticalLayout_3.addWidget(self.to_register)
        self.label_5 = QtWidgets.QLabel(parent=self.Login_page)
        self.label_5.setObjectName("label_5")
        self.verticalLayout_3.addWidget(self.label_5, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.stackedWidget.addWidget(self.Login_page)
        self.verticalLayout_2.addWidget(self.stackedWidget)
        MainWindow.setCentralWidget(self.centralwidget)

        # Set up the pages
        self.retranslateUi(MainWindow)
        self.stackedWidget.setCurrentIndex(1)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        # Connect buttons to functions
        self.to_login.clicked.connect(self.switchToLogin)
        self.to_register.clicked.connect(self.switchToRegister)

        # Register page
        self.pushButton.clicked.connect(self.showMessageRegister)
        self.pushButton_3.clicked.connect(self.showMessageLogin)

        # Reset password
        self.fg_p.clicked.connect(self.resetPassword)


    # Switch to login page
    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label_2.setText(_translate("MainWindow", "Sign Up"))
        self.label_3.setText(_translate("MainWindow", "Enter your information below"))
        self.lineEdit.setPlaceholderText(_translate("MainWindow", "Username"))
        self.lineEdit_2.setPlaceholderText(_translate("MainWindow", "Password"))
        self.lineEdit_3.setPlaceholderText(_translate("MainWindow", "Password Confirm"))
        self.checkBox.setText(_translate("MainWindow", "CheckBox"))
        self.pushButton.setText(_translate("MainWindow", "Register"))
        self.to_login.setText(_translate("MainWindow", "Already registered? Login"))
        self.label_4.setText(_translate("MainWindow", "Team CCP"))
        self.label_7.setText(_translate("MainWindow", "Log In"))
        self.label_6.setText(_translate("MainWindow", "Enter your information below"))
        self.lineEdit_4.setPlaceholderText(_translate("MainWindow", "Username"))
        self.lineEdit_6.setPlaceholderText(_translate("MainWindow", "Password"))
        self.pushButton_3.setText(_translate("MainWindow", "Login"))
        self.fg_p.setText(_translate("MainWindow", "Forgot password?"))
        self.to_register.setText(_translate("MainWindow", "Not registered? Register"))
        self.label_5.setText(_translate("MainWindow", "Team CCP"))

    # Switch to login page
    def switchToLogin(self):
        self.stackedWidget.setCurrentIndex(1)

    # Switch to register page
    def switchToRegister(self):
        self.stackedWidget.setCurrentIndex(0)

    # Show message box for register
    def showMessageLogin(self):
        username = self.lineEdit_4.text()
        password = self.lineEdit_6.text()

        if authenticate_user(username, password):
             QtWidgets.QMessageBox.information(self.widget, "Login", "You have successfully logged in.")
        else:
            QtWidgets.QMessageBox.warning(self.widget, "Login", "Invalid username or password.")

    # Show message box for login
    def showMessageRegister(self):
        username = self.lineEdit.text()
        password = self.lineEdit_2.text()
        password_confirm = self.lineEdit_3.text()

        if password != password_confirm:
            QtWidgets.QMessageBox.warning(self.widget, "Register", "Passwords do not match.")
            return

        if register_user(username, password):
            QtWidgets.QMessageBox.information(self.widget, "Register", "You have successfully registered.")
        else:
            QtWidgets.QMessageBox.warning(self.widget, "Register", "Username is already taken.")


    # Reset password
    def resetPassword(self):
        username = self.lineEdit_4.text()

        # Check if the user exists
        conn = sqlite3.connect("users.db")
        cursor = conn.cursor()
        cursor.execute("SELECT * FROM users WHERE username = ?", (username,))
        result = cursor.fetchone()

        if result is None:
            QtWidgets.QMessageBox.warning(self.widget, "Password Reset", "User not found.")
            conn.close()
        else:
            # Generate a token and send an email
            token = generate_token()
            to_email = result[2]  # Retrieve the user's email from the database
            if send_reset_email(to_email, token):
                QtWidgets.QMessageBox.information(self.widget, "Password Reset",
                                                  "A password reset token has been sent to your email.")

                # Show the ResetPasswordDialog
                reset_password_dialog = ResetPasswordDialog()
                result = reset_password_dialog.exec()

                if result == QtWidgets.QDialog.DialogCode.Accepted:
                    new_password = reset_password_dialog.new_password_lineEdit.text()
                    cursor.execute("UPDATE users SET password = ? WHERE username = ?", (new_password, username))
                    conn.commit()
                    conn.close()
            else:
                QtWidgets.QMessageBox.critical(self.widget, "Password Reset", "An error occurred while sending the email. Please try again.")



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
